Description: Creates a public load balancer to sit in front of auto-scaled ec2 instances.

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Creates a Security Group for the Public LoadBalancer
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Resources:
  LBSGDashboard:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for public LB that loadbalances Dashboard traffic
      VpcId: !ImportValue Base01:VPC
      Tags:
        - Key: Name
          Value: LoadBalancerSecurityGroup01
        - Key: Module
          Value: Automation
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0


  LBSGForm:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for public LB that loadbalances Form traffic
      VpcId: !ImportValue Base01:VPC
      Tags:
        - Key: Name
          Value: LoadBalancerSecurityGroup01
        - Key: Module
          Value: Automation
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 8080
        CidrIp: 0.0.0.0/0

#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Creates a public load balancer that lets traffic flow to the auto-scaled webservers
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
  LBDashboard:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: LBDashboard
      SecurityGroups: [ !Ref LBSGDashboard ]
      Subnets: [!ImportValue Base01:PublicSubnet01:us-east-1a, !ImportValue Base01:PublicSubnet02:us-east-1b]
  Listener01:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup01
      LoadBalancerArn: !Ref LBDashboard
      Port: 80
      Protocol: HTTP
  TargetGroup01:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: PublicInstances01
      VpcId: !ImportValue Base01:VPC
      Port: 80
      Protocol: HTTP
      HealthCheckPath: "/dashboard/"

  LBForm:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: LBForm
      SecurityGroups: [ !Ref LBSGForm ]
      Subnets: [!ImportValue Base01:PublicSubnet01:us-east-1a, !ImportValue Base01:PublicSubnet02:us-east-1b]
  Listener02:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup02
      LoadBalancerArn: !Ref LBForm
      Port: 80
      Protocol: HTTP
  TargetGroup02:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: PublicInstances02
      VpcId: !ImportValue Base01:VPC
      Port: 8080
      Protocol: HTTP
      HealthCheckPath: "/"
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Exports All necessary LB information
#--------------------------------------------------------------------------------------------------------------------------------------------------------------------
Outputs:
  TargetGroup01Ref:
      Description: TargetGroup
      Value: !GetAtt TargetGroup01.TargetGroupFullName
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", TargetGroup01 ] ]
  TargetGroup01ARNRef:
      Description: TargetGroup
      Value: !Ref TargetGroup01
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", TargetGroup01Arn ] ]
  TargetGroup02Ref:
      Description: TargetGroup2
      Value: !GetAtt TargetGroup02.TargetGroupFullName
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", TargetGroup02 ] ]
  TargetGroup02ARNRef:
      Description: TargetGroup2
      Value: !Ref TargetGroup02
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", TargetGroup02Arn ] ]
  LBDashboardRef:
      Description: LBDashboard full name
      Value: !GetAtt LBDashboard.LoadBalancerFullName
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", LBDashboard ] ]
  LBDashboardARNRef:
      Description: LBDashboard Arn
      Value: !Ref LBDashboard
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", LBDashboardArn ] ]
  LBFormRef:
      Description: LBForm full name
      Value: !GetAtt LBForm.LoadBalancerFullName
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", LBForm ] ]
  LBFormARNRef:
      Description: LBForm Arn
      Value: !Ref LBForm
      Export:
        Name: !Join [ ":", [ !Ref "AWS::StackName", LBFormArn ] ]